#!/bin/bash

declare CABAL=cabal
declare RESULT_DIR=results
declare NUMBER_OF_OPERATIONS=30

# Setup

mkdir -p $RESULT_DIR

# Clean

if [[ $* == *--clean* ]]; then
  echo "Cleanning executions"
  rm -vrf $RESULT_DIR/*
  exit 0
else
  echo "Run --clean to cleanup execution data"
fi

# 2-LL

echo "Generating data for 2-LL"
mkdir -p $RESULT_DIR/2-LL

for bin in "IOSTM_LinkedList" "LinkedList"; do
  for numOp in "200" "2000"; do # "20000" "200000"; do
    for listLength in "500" "1000" "1500"; do
      for numThreads in "2" "4" "8"; do
        ops=$(($numOp/$numThreads))
        echo "$bin op$numOp ln$listLength t$numThreads $NUMBER_OF_OPERATIONS"
        cabal -v0 v2-run $bin $ops $listLength $numThreads $NUMBER_OF_OPERATIONS \
              > $RESULT_DIR/2-LL/${bin}_op${numOp}_ln${listLength}_t${numThreads}.csv
      done
    done
  done
done

#SharedInt

#        for numThreads in $cores
   #             do
   #            for((i=1;$i<=$runs;i=$(($i+1))));
   #                 do
   #                     ops=$(($numOp/$numThreads))
   #                     $echo $benchpath/1-SI/Main $ops $numThreads 1 +RTS -N$numThreads $rtsopts -RTS  >> "$benchpath/x-Results/SI-$numThreads" 2>&1
   #              done
   #       done
   # done

